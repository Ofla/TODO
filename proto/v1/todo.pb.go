// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1/todo.proto

package proto_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_TODO       Status = 0
	Status_INPROGRESS Status = 1
	Status_DONE       Status = 2
)

var Status_name = map[int32]string{
	0: "TODO",
	1: "INPROGRESS",
	2: "DONE",
}

var Status_value = map[string]int32{
	"TODO":       0,
	"INPROGRESS": 1,
	"DONE":       2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5c17cf051cea2657, []int{0}
}

type Todo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status               Status   `protobuf:"varint,3,opt,name=status,proto3,enum=proto.v1.Status" json:"status,omitempty"`
	ItemType             string   `protobuf:"bytes,4,opt,name=itemType,proto3" json:"itemType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Todo) Reset()         { *m = Todo{} }
func (m *Todo) String() string { return proto.CompactTextString(m) }
func (*Todo) ProtoMessage()    {}
func (*Todo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c17cf051cea2657, []int{0}
}

func (m *Todo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Todo.Unmarshal(m, b)
}
func (m *Todo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Todo.Marshal(b, m, deterministic)
}
func (m *Todo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Todo.Merge(m, src)
}
func (m *Todo) XXX_Size() int {
	return xxx_messageInfo_Todo.Size(m)
}
func (m *Todo) XXX_DiscardUnknown() {
	xxx_messageInfo_Todo.DiscardUnknown(m)
}

var xxx_messageInfo_Todo proto.InternalMessageInfo

func (m *Todo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Todo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Todo) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_TODO
}

func (m *Todo) GetItemType() string {
	if m != nil {
		return m.ItemType
	}
	return ""
}

type Reply struct {
	Err                  bool     `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	ReplyMessage         string   `protobuf:"bytes,2,opt,name=replyMessage,proto3" json:"replyMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c17cf051cea2657, []int{1}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetErr() bool {
	if m != nil {
		return m.Err
	}
	return false
}

func (m *Reply) GetReplyMessage() string {
	if m != nil {
		return m.ReplyMessage
	}
	return ""
}

type UpdateTodoMessage struct {
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Todo                 *Todo    `protobuf:"bytes,1,opt,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTodoMessage) Reset()         { *m = UpdateTodoMessage{} }
func (m *UpdateTodoMessage) String() string { return proto.CompactTextString(m) }
func (*UpdateTodoMessage) ProtoMessage()    {}
func (*UpdateTodoMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c17cf051cea2657, []int{2}
}

func (m *UpdateTodoMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTodoMessage.Unmarshal(m, b)
}
func (m *UpdateTodoMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTodoMessage.Marshal(b, m, deterministic)
}
func (m *UpdateTodoMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTodoMessage.Merge(m, src)
}
func (m *UpdateTodoMessage) XXX_Size() int {
	return xxx_messageInfo_UpdateTodoMessage.Size(m)
}
func (m *UpdateTodoMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTodoMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTodoMessage proto.InternalMessageInfo

func (m *UpdateTodoMessage) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *UpdateTodoMessage) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

type RemoveTodoMessage struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTodoMessage) Reset()         { *m = RemoveTodoMessage{} }
func (m *RemoveTodoMessage) String() string { return proto.CompactTextString(m) }
func (*RemoveTodoMessage) ProtoMessage()    {}
func (*RemoveTodoMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c17cf051cea2657, []int{3}
}

func (m *RemoveTodoMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTodoMessage.Unmarshal(m, b)
}
func (m *RemoveTodoMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTodoMessage.Marshal(b, m, deterministic)
}
func (m *RemoveTodoMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTodoMessage.Merge(m, src)
}
func (m *RemoveTodoMessage) XXX_Size() int {
	return xxx_messageInfo_RemoveTodoMessage.Size(m)
}
func (m *RemoveTodoMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTodoMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTodoMessage proto.InternalMessageInfo

func (m *RemoveTodoMessage) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type UpdateStatusOfTodoMessage struct {
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	StatusOftodo         Status   `protobuf:"varint,1,opt,name=statusOftodo,proto3,enum=proto.v1.Status" json:"statusOftodo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateStatusOfTodoMessage) Reset()         { *m = UpdateStatusOfTodoMessage{} }
func (m *UpdateStatusOfTodoMessage) String() string { return proto.CompactTextString(m) }
func (*UpdateStatusOfTodoMessage) ProtoMessage()    {}
func (*UpdateStatusOfTodoMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c17cf051cea2657, []int{4}
}

func (m *UpdateStatusOfTodoMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStatusOfTodoMessage.Unmarshal(m, b)
}
func (m *UpdateStatusOfTodoMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStatusOfTodoMessage.Marshal(b, m, deterministic)
}
func (m *UpdateStatusOfTodoMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStatusOfTodoMessage.Merge(m, src)
}
func (m *UpdateStatusOfTodoMessage) XXX_Size() int {
	return xxx_messageInfo_UpdateStatusOfTodoMessage.Size(m)
}
func (m *UpdateStatusOfTodoMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStatusOfTodoMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStatusOfTodoMessage proto.InternalMessageInfo

func (m *UpdateStatusOfTodoMessage) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *UpdateStatusOfTodoMessage) GetStatusOftodo() Status {
	if m != nil {
		return m.StatusOftodo
	}
	return Status_TODO
}

type FindAllMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindAllMessage) Reset()         { *m = FindAllMessage{} }
func (m *FindAllMessage) String() string { return proto.CompactTextString(m) }
func (*FindAllMessage) ProtoMessage()    {}
func (*FindAllMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c17cf051cea2657, []int{5}
}

func (m *FindAllMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindAllMessage.Unmarshal(m, b)
}
func (m *FindAllMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindAllMessage.Marshal(b, m, deterministic)
}
func (m *FindAllMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindAllMessage.Merge(m, src)
}
func (m *FindAllMessage) XXX_Size() int {
	return xxx_messageInfo_FindAllMessage.Size(m)
}
func (m *FindAllMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_FindAllMessage.DiscardUnknown(m)
}

var xxx_messageInfo_FindAllMessage proto.InternalMessageInfo

type FindAllReply struct {
	Todos                []*TodoReply `protobuf:"bytes,1,rep,name=todos,proto3" json:"todos,omitempty"`
	Response             *Reply       `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FindAllReply) Reset()         { *m = FindAllReply{} }
func (m *FindAllReply) String() string { return proto.CompactTextString(m) }
func (*FindAllReply) ProtoMessage()    {}
func (*FindAllReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c17cf051cea2657, []int{6}
}

func (m *FindAllReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindAllReply.Unmarshal(m, b)
}
func (m *FindAllReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindAllReply.Marshal(b, m, deterministic)
}
func (m *FindAllReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindAllReply.Merge(m, src)
}
func (m *FindAllReply) XXX_Size() int {
	return xxx_messageInfo_FindAllReply.Size(m)
}
func (m *FindAllReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FindAllReply.DiscardUnknown(m)
}

var xxx_messageInfo_FindAllReply proto.InternalMessageInfo

func (m *FindAllReply) GetTodos() []*TodoReply {
	if m != nil {
		return m.Todos
	}
	return nil
}

func (m *FindAllReply) GetResponse() *Reply {
	if m != nil {
		return m.Response
	}
	return nil
}

type TodoReply struct {
	Todo                 *Todo    `protobuf:"bytes,2,opt,name=todo,proto3" json:"todo,omitempty"`
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TodoReply) Reset()         { *m = TodoReply{} }
func (m *TodoReply) String() string { return proto.CompactTextString(m) }
func (*TodoReply) ProtoMessage()    {}
func (*TodoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c17cf051cea2657, []int{7}
}

func (m *TodoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoReply.Unmarshal(m, b)
}
func (m *TodoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoReply.Marshal(b, m, deterministic)
}
func (m *TodoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoReply.Merge(m, src)
}
func (m *TodoReply) XXX_Size() int {
	return xxx_messageInfo_TodoReply.Size(m)
}
func (m *TodoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoReply.DiscardUnknown(m)
}

var xxx_messageInfo_TodoReply proto.InternalMessageInfo

func (m *TodoReply) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

func (m *TodoReply) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func init() {
	proto.RegisterEnum("proto.v1.Status", Status_name, Status_value)
	proto.RegisterType((*Todo)(nil), "proto.v1.Todo")
	proto.RegisterType((*Reply)(nil), "proto.v1.Reply")
	proto.RegisterType((*UpdateTodoMessage)(nil), "proto.v1.UpdateTodoMessage")
	proto.RegisterType((*RemoveTodoMessage)(nil), "proto.v1.RemoveTodoMessage")
	proto.RegisterType((*UpdateStatusOfTodoMessage)(nil), "proto.v1.UpdateStatusOfTodoMessage")
	proto.RegisterType((*FindAllMessage)(nil), "proto.v1.FindAllMessage")
	proto.RegisterType((*FindAllReply)(nil), "proto.v1.FindAllReply")
	proto.RegisterType((*TodoReply)(nil), "proto.v1.TodoReply")
}

func init() {
	proto.RegisterFile("proto/v1/todo.proto", fileDescriptor_5c17cf051cea2657)
}

var fileDescriptor_5c17cf051cea2657 = []byte{
	// 553 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x4e, 0x9a, 0xa6, 0x93, 0xc8, 0xb8, 0x13, 0x40, 0xc6, 0xe5, 0x10, 0x2d, 0x07, 0x42,
	0x40, 0x49, 0x6b, 0x10, 0x87, 0x4a, 0x08, 0x55, 0x4a, 0xa9, 0x22, 0x44, 0x83, 0x9c, 0x20, 0xce,
	0xa6, 0xbb, 0x4d, 0x2d, 0x25, 0x5e, 0xcb, 0xeb, 0x46, 0xaa, 0x10, 0x97, 0xfc, 0x02, 0x9f, 0xc6,
	0x2f, 0x70, 0xe7, 0x17, 0xd0, 0xee, 0x3a, 0x71, 0x1c, 0xa7, 0xe2, 0x14, 0x7b, 0xe6, 0xcd, 0x7b,
	0x6f, 0xc6, 0x2f, 0xd0, 0x8a, 0x13, 0x9e, 0xf2, 0xfe, 0xe2, 0xa4, 0x9f, 0x72, 0xca, 0x7b, 0xea,
	0x0d, 0xeb, 0xea, 0xa7, 0xb7, 0x38, 0x71, 0x9f, 0x4d, 0x39, 0x9f, 0xce, 0x58, 0x3f, 0x88, 0xc3,
	0x7e, 0x10, 0x45, 0x3c, 0x0d, 0xd2, 0x90, 0x47, 0x42, 0xe3, 0xc8, 0xd2, 0x80, 0xea, 0x84, 0x53,
	0x8e, 0x08, 0xd5, 0x28, 0x98, 0x33, 0xc7, 0x68, 0x1b, 0x9d, 0x03, 0x5f, 0x3d, 0x63, 0x1b, 0x1a,
	0x94, 0x89, 0xab, 0x24, 0x8c, 0xe5, 0x88, 0x63, 0xaa, 0xd6, 0x66, 0x09, 0x3b, 0x50, 0x13, 0x69,
	0x90, 0xde, 0x0a, 0xa7, 0xd2, 0x36, 0x3a, 0x96, 0x67, 0xf7, 0x56, 0xba, 0xbd, 0xb1, 0xaa, 0xfb,
	0x59, 0x1f, 0x5d, 0xa8, 0x87, 0x29, 0x9b, 0x4f, 0xee, 0x62, 0xe6, 0x54, 0x15, 0xd1, 0xfa, 0x9d,
	0xbc, 0x87, 0x3d, 0x9f, 0xc5, 0xb3, 0x3b, 0xb4, 0xa1, 0xc2, 0x92, 0x44, 0x79, 0xa8, 0xfb, 0xf2,
	0x11, 0x09, 0x34, 0x13, 0xd9, 0xfa, 0xcc, 0x84, 0x08, 0xa6, 0x2c, 0xf3, 0x50, 0xa8, 0x91, 0x4f,
	0x70, 0xf8, 0x35, 0xa6, 0x41, 0xca, 0xe4, 0x22, 0x59, 0x51, 0xee, 0x73, 0x13, 0x88, 0x9b, 0x6c,
	0x40, 0x3d, 0x23, 0x81, 0xaa, 0x3c, 0x91, 0xe2, 0x6f, 0x78, 0x56, 0xee, 0x55, 0x0e, 0xfa, 0xaa,
	0x47, 0x5e, 0xc0, 0xa1, 0xcf, 0xe6, 0x7c, 0xb1, 0x93, 0xcc, 0xc8, 0xc9, 0x08, 0x83, 0xa7, 0x5a,
	0x55, 0x2f, 0x3a, 0xba, 0xfe, 0x9f, 0xfa, 0x5b, 0x68, 0x8a, 0x0c, 0xba, 0x76, 0xb1, 0xeb, 0x62,
	0x05, 0x14, 0xb1, 0xc1, 0xfa, 0x18, 0x46, 0xf4, 0x6c, 0x36, 0x5b, 0xad, 0x7b, 0x0d, 0xcd, 0xac,
	0xa2, 0x8f, 0xf6, 0x12, 0xf6, 0x24, 0x52, 0x38, 0x46, 0xbb, 0xd2, 0x69, 0x78, 0xad, 0xad, 0xb5,
	0x24, 0xc6, 0xd7, 0x08, 0x7c, 0x05, 0xf5, 0x84, 0x89, 0x98, 0x47, 0x82, 0xa9, 0x0f, 0xd6, 0xf0,
	0x1e, 0xe6, 0x68, 0x8d, 0x5c, 0x03, 0xc8, 0x07, 0x38, 0x58, 0x13, 0xac, 0x4f, 0x67, 0xde, 0x7f,
	0x3a, 0xb4, 0xc0, 0x1c, 0x0e, 0xb2, 0x1b, 0x99, 0xc3, 0x41, 0xf7, 0x35, 0xd4, 0xf4, 0x4a, 0x58,
	0x87, 0xea, 0x64, 0x34, 0x18, 0xd9, 0x0f, 0xd0, 0x02, 0x18, 0x5e, 0x7e, 0xf1, 0x47, 0x17, 0xfe,
	0xf9, 0x78, 0x6c, 0x1b, 0xb2, 0x33, 0x18, 0x5d, 0x9e, 0xdb, 0xa6, 0xf7, 0xb7, 0x02, 0x0d, 0x49,
	0x36, 0x66, 0xc9, 0x22, 0xbc, 0x62, 0x78, 0x01, 0xfb, 0x67, 0x94, 0xaa, 0x6c, 0x6e, 0xc9, 0xb9,
	0xdb, 0xa6, 0xc9, 0xd1, 0xf2, 0xf7, 0x9f, 0x5f, 0xe6, 0x63, 0x62, 0xab, 0x94, 0x4b, 0x33, 0xf2,
	0xef, 0x10, 0x50, 0x7a, 0x6a, 0x74, 0x71, 0x0c, 0xfb, 0xd9, 0xbd, 0xd0, 0xc9, 0x07, 0x8b, 0x47,
	0x75, 0x9f, 0x94, 0x3a, 0x9a, 0xf9, 0x91, 0x62, 0xb6, 0xb0, 0xb9, 0xc9, 0x7c, 0x6c, 0xe0, 0x37,
	0x80, 0x3c, 0x26, 0x78, 0xb4, 0x69, 0x68, 0x2b, 0x3c, 0xf7, 0xba, 0xed, 0xb6, 0x0a, 0x6e, 0x7f,
	0xc8, 0x90, 0xfc, 0x44, 0x0a, 0x90, 0x87, 0x79, 0x93, 0xb8, 0x14, 0xf1, 0x32, 0x71, 0x47, 0x11,
	0x13, 0xd7, 0x2d, 0x10, 0xdf, 0xaa, 0xc1, 0x8c, 0xff, 0x54, 0x7f, 0xaa, 0xa5, 0x01, 0x58, 0x4e,
	0x2f, 0x3e, 0xdf, 0x96, 0xdb, 0x91, 0xed, 0xb2, 0xec, 0x3b, 0x25, 0x7b, 0xec, 0xb5, 0x77, 0xc8,
	0x6a, 0x82, 0x95, 0x78, 0x21, 0xda, 0xdf, 0x6b, 0x8a, 0xe7, 0xcd, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xd3, 0x7a, 0xe5, 0x43, 0xc1, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TodoServiceClient is the client API for TodoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoServiceClient interface {
	AddTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*Reply, error)
	FindAll(ctx context.Context, in *FindAllMessage, opts ...grpc.CallOption) (TodoService_FindAllClient, error)
	RemoveTodo(ctx context.Context, in *RemoveTodoMessage, opts ...grpc.CallOption) (*Reply, error)
	UpdateTodo(ctx context.Context, in *UpdateTodoMessage, opts ...grpc.CallOption) (*Reply, error)
	UpdateStatusOfTodo(ctx context.Context, in *UpdateStatusOfTodoMessage, opts ...grpc.CallOption) (*Reply, error)
}

type todoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTodoServiceClient(cc grpc.ClientConnInterface) TodoServiceClient {
	return &todoServiceClient{cc}
}

func (c *todoServiceClient) AddTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.v1.TodoService/AddTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) FindAll(ctx context.Context, in *FindAllMessage, opts ...grpc.CallOption) (TodoService_FindAllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TodoService_serviceDesc.Streams[0], "/proto.v1.TodoService/FindAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &todoServiceFindAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TodoService_FindAllClient interface {
	Recv() (*FindAllReply, error)
	grpc.ClientStream
}

type todoServiceFindAllClient struct {
	grpc.ClientStream
}

func (x *todoServiceFindAllClient) Recv() (*FindAllReply, error) {
	m := new(FindAllReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *todoServiceClient) RemoveTodo(ctx context.Context, in *RemoveTodoMessage, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.v1.TodoService/RemoveTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) UpdateTodo(ctx context.Context, in *UpdateTodoMessage, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.v1.TodoService/UpdateTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) UpdateStatusOfTodo(ctx context.Context, in *UpdateStatusOfTodoMessage, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.v1.TodoService/UpdateStatusOfTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoServiceServer is the server API for TodoService service.
type TodoServiceServer interface {
	AddTodo(context.Context, *Todo) (*Reply, error)
	FindAll(*FindAllMessage, TodoService_FindAllServer) error
	RemoveTodo(context.Context, *RemoveTodoMessage) (*Reply, error)
	UpdateTodo(context.Context, *UpdateTodoMessage) (*Reply, error)
	UpdateStatusOfTodo(context.Context, *UpdateStatusOfTodoMessage) (*Reply, error)
}

// UnimplementedTodoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTodoServiceServer struct {
}

func (*UnimplementedTodoServiceServer) AddTodo(ctx context.Context, req *Todo) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTodo not implemented")
}
func (*UnimplementedTodoServiceServer) FindAll(req *FindAllMessage, srv TodoService_FindAllServer) error {
	return status.Errorf(codes.Unimplemented, "method FindAll not implemented")
}
func (*UnimplementedTodoServiceServer) RemoveTodo(ctx context.Context, req *RemoveTodoMessage) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTodo not implemented")
}
func (*UnimplementedTodoServiceServer) UpdateTodo(ctx context.Context, req *UpdateTodoMessage) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTodo not implemented")
}
func (*UnimplementedTodoServiceServer) UpdateStatusOfTodo(ctx context.Context, req *UpdateStatusOfTodoMessage) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStatusOfTodo not implemented")
}

func RegisterTodoServiceServer(s *grpc.Server, srv TodoServiceServer) {
	s.RegisterService(&_TodoService_serviceDesc, srv)
}

func _TodoService_AddTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Todo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).AddTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.TodoService/AddTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).AddTodo(ctx, req.(*Todo))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_FindAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FindAllMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TodoServiceServer).FindAll(m, &todoServiceFindAllServer{stream})
}

type TodoService_FindAllServer interface {
	Send(*FindAllReply) error
	grpc.ServerStream
}

type todoServiceFindAllServer struct {
	grpc.ServerStream
}

func (x *todoServiceFindAllServer) Send(m *FindAllReply) error {
	return x.ServerStream.SendMsg(m)
}

func _TodoService_RemoveTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveTodoMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).RemoveTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.TodoService/RemoveTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).RemoveTodo(ctx, req.(*RemoveTodoMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_UpdateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTodoMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).UpdateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.TodoService/UpdateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).UpdateTodo(ctx, req.(*UpdateTodoMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_UpdateStatusOfTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStatusOfTodoMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).UpdateStatusOfTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.TodoService/UpdateStatusOfTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).UpdateStatusOfTodo(ctx, req.(*UpdateStatusOfTodoMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.v1.TodoService",
	HandlerType: (*TodoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTodo",
			Handler:    _TodoService_AddTodo_Handler,
		},
		{
			MethodName: "RemoveTodo",
			Handler:    _TodoService_RemoveTodo_Handler,
		},
		{
			MethodName: "UpdateTodo",
			Handler:    _TodoService_UpdateTodo_Handler,
		},
		{
			MethodName: "UpdateStatusOfTodo",
			Handler:    _TodoService_UpdateStatusOfTodo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FindAll",
			Handler:       _TodoService_FindAll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/v1/todo.proto",
}
